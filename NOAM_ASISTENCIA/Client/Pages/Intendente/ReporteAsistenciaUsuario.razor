@page "/asistencia/reporte/usuario"
@attribute [Authorize(Roles = "Intendente")]
@inject CustomAuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager

<PageTitle>Reportes de Asistencia</PageTitle>

@if (Username != null)
{
    <Heading Size="HeadingSize.Is4">Reporte de asistencia para @Username</Heading>
    <Paragraph>Desde: @StartDate.ToString("ddd dd MMM yyy")</Paragraph>
    <Paragraph>Hasta: @EndDate.ToString("ddd dd MMM yyy")</Paragraph>

    <SfGrid @ref=_Grid TValue="ReporteAsistenciaGeneralUsuarioDTO" AllowFiltering="true" AllowSorting="false" AllowPaging="true">
        <SfDataManager Url="@($"api/asistencias/{Username}")" Adaptor="Adaptors.WebApiAdaptor"></SfDataManager>
        <GridEvents OnActionBegin="OnActionBegin" TValue="ReporteAsistenciaGeneralUsuarioDTO"></GridEvents>
        <GridEditSettings AllowAdding="false" AllowDeleting="false" AllowEditing="false"></GridEditSettings>
        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu" Operators="@Operators"></GridFilterSettings>
        <GridPageSettings PageSize="10"></GridPageSettings>
        <GridColumns>
            <GridColumn Field=@nameof(ReporteAsistenciaGeneralUsuarioDTO.Sucursal) HeaderText="Servicio" AllowFiltering="false" Width="100"></GridColumn>
            <GridColumn Field=@nameof(ReporteAsistenciaGeneralUsuarioDTO.Fecha) HeaderText="Fecha" Format="ddd dd MMM yyy" Type="ColumnType.Date" Width="100">
                <FilterTemplate>
                    <SfDateRangePicker Placeholder="Fecha y Hora" Width="500" ShowClearButton="true" @bind-StartDate="StartDate" @bind-EndDate="EndDate" TValue="DateTime">
                        <DateRangePickerEvents TValue="DateTime" ValueChange="ValueChangeHandler">
                        </DateRangePickerEvents>
                    </SfDateRangePicker>
                </FilterTemplate>
            </GridColumn>
            <GridColumn Field=@nameof(ReporteAsistenciaGeneralUsuarioDTO.Fecha) HeaderText="Hora de Entrada" Format="HH:mm" Type="ColumnType.Date" AllowFiltering="false" Width="100"></GridColumn>
            <GridColumn Field=@nameof(ReporteAsistenciaGeneralUsuarioDTO.FechaSalida) HeaderText="Hora de Salida" Format="HH:mm" Type="ColumnType.Date" AllowFiltering="false" Width="100"></GridColumn>
            <GridColumn Field=@nameof(ReporteAsistenciaGeneralUsuarioDTO.HorasLaboradas) HeaderText="Horas Laboradas" Format="##0.#" Type="ColumnType.Number" Width="100" AllowFiltering="false"></GridColumn>
        </GridColumns>
    </SfGrid>
}

@code {
    // REFERENCIAS PARA EL DATAGRID
    private SfGrid<ReporteAsistenciaGeneralUsuarioDTO>? _Grid;
    private IEnumerable<Operator> Operators = new List<Operator> { Operator.Equal, Operator.GreaterThanOrEqual };

    // OBTENER DIAS DE ESTE MES POR PREDETERMINADO
    public DateTime StartDate { get; set; } = DateTime.Today;
    public DateTime EndDate { get; set; } = DateTime.Today.AddDays(1).AddSeconds(-1);

    // NOMBRE DEL USUARIO CON LA SESION INICIADA
    private string Username = null!;

    protected override async Task OnInitializedAsync()
    {
        // OBTENER LOS CLAIMS DE SESION PARA OBTENER EL NOMBRE DE USUARIO
        AuthenticationState authstate = await AuthStateProvider.GetAuthenticationStateAsync();
        ClaimsPrincipal user = authstate.User;
        // ASIGNAR EL NOMBRE A LA PROPIEDAD
        Username = user.Identity!.Name!;
    }

    public async Task OnActionBegin(ActionEventArgs<ReporteAsistenciaGeneralUsuarioDTO> args)
    {
        if (args.RequestType.Equals(Syncfusion.Blazor.Grids.Action.Filtering) && args.CurrentFilteringColumn == "Fecha")
        {
            // CANCELAR LA ACCION DE FILTRADO PREDEFINIDA PARA PODER MODIFICARLA
            args.Cancel = true;

            if (_Grid!.FilterSettings.Columns == null)
            {
                _Grid!.FilterSettings.Columns = new List<GridFilterColumn>();
            }
            if (_Grid!.FilterSettings.Columns.Count > 0)
            {
                _Grid!.FilterSettings.Columns.RemoveAll(c => c.Field == "Fecha");
            }

            // OBTENER TODAS LAS COLUMNAS DEL DATAGRID
            var columns = await _Grid!.GetColumnsAsync();
            // BUSCAR EL UID DE LA COLUMNA FECHA
            string fUid = columns[3].Uid;

            _Grid!.FilterSettings.Columns.Add(
                new GridFilterColumn
                    {
                        Field = "Fecha",
                        Operator = Syncfusion.Blazor.Operator.GreaterThanOrEqual,
                        Predicate = "and",
                        Value = StartDate,
                        Uid = fUid
                    }
            );

            _Grid!.FilterSettings.Columns.Add(
                new GridFilterColumn
                    {
                        Field = "Fecha",
                        Operator = Syncfusion.Blazor.Operator.LessThanOrEqual,
                        Predicate = "and",
                        Value = EndDate.AddDays(1).AddSeconds(-1),
                        Uid = fUid
                    }
            );

            // AHORA SI FILTRAR LA INFORMACION
            await _Grid!.Refresh();
        }
    }

    public void ValueChangeHandler(RangePickerEventArgs<DateTime> args)
    {
        StartDate = args.StartDate;
        EndDate = args.EndDate;
    }
}
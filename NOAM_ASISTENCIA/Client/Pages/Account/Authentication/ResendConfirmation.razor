@page "/account/register/emailconfirmation/resend/{UserId}"
@layout AuthLayout
@inject IAccountService authService
@inject NavigationManager navigationManager

<PageTitle>Confirmación de cuenta</PageTitle>

<div class="col justify-content-center p-5">
    <div class="text-center">
        <h1 class="text-gray-900 mb-4">Confirmación de cuenta</h1>
    </div>

    <hr />

    @if (!Successful)
    {
        if (ShowErrors)
        {
            <div class="alert alert-danger" role="alert">
                @foreach (var error in Errors)
                {
                    <p class="mb-0">@error</p>
                }
            </div>
        }
        else
        {
            <p>Cargando...</p>
        }
    }
    else
    {
        <p>Estimado/Estimada '@Username', el correo ha vuelto a enviarse a '@UserEmail'. Verifique su email y siga los pasos que se indiquen.</p>
        <p class="text-center">Puede cerrar esta ventana.</p>
    }

    <hr />

    <div class="form-group text-center row mb-3">
        <div class="col-6">
            <a href="/" class="btn btn-primary">
                Volver a Inicio <i class="fa fa-home"></i>
            </a>
        </div>

    </div>
</div>

@code {
    [Parameter]
    public string UserId { get; set; } = null!;

    private string Username = null!;
    private string UserEmail = null!;

    private bool Successful;
    private bool ShowErrors = false;
    private IEnumerable<string> Errors = null!;

    protected override async Task OnInitializedAsync()
    {
        CheckIfParametersAreNull();

        ResendEmailRequest model = new ResendEmailRequest() { UserId = UserId };
        ApiResponse<ResendEmailResult> result = await authService.ResendConfirmationEmail(model);
        ResendEmailResult modelResult = result.Result!;

        if (modelResult != null)
        {
            if (result.Successful)
            {
                Username = modelResult.Username;
                UserEmail = modelResult.UserEmail;
                Successful = true;
            }
            else
            {
                ShowErrors = false;
                Errors = result.ErrorMessages;
            }
        }
        else
        {
            Errors = new List<string>() { "Error inesperado. Inténtelo de nuevo más tarde." };
            ShowErrors = true;
            Successful = false;
        }
    }

    private void CheckIfParametersAreNull()
    {
        if (string.IsNullOrEmpty(UserId))
        {
            navigationManager.NavigateTo("/");
        }
    }
}

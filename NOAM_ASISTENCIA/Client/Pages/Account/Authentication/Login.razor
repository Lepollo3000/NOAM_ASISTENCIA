@page "/account/login"
@layout AuthLayout
@inject NavigationManager navigationManager
@inject IAccountService authService

<PageTitle>Inicio de sesión</PageTitle>

<Column>
    <Div Class="p-5">
        <Div Class="text-center">
            <h1 class="h4 text-gray-900 mb-4">Inicio de sesión</h1>
        </Div>

        <hr />

        <EditForm Model="@ModelRequest" OnValidSubmit="@Submit">
            <DataAnnotationsValidator />
            <Blazorise.ValidationSummary />

            <Div Class="form-group mb-3">
                <Label For="email">Nombre de usuario</Label>
                <InputText id="email" class="form-control" @bind-Value="@ModelRequest.UserName" />
                <ValidationMessage For="@(() => ModelRequest.UserName)" />
            </Div>

            <Div Class="form-group mb-3">
                <Label For="password">Contraseña</Label>
                <InputText id="password" type="password" class="form-control" @bind-Value="@ModelRequest.Password" />
                <ValidationMessage For="@(() => ModelRequest.Password)" />
            </Div>

            <Div TextAlignment="TextAlignment.Center" Class="form-group mb-3">
                <Button Type="ButtonType.Submit" Class="btn btn-primary">Iniciar Sesión</Button>
                <Button To="/" Class="btn btn-primary mx-auto">Volver a Inicio <i class="fa fa-home"></i></Button>
            </Div>
        </EditForm>

        <hr />

        <Div TextAlignment="TextAlignment.Center">
            <Button Type="ButtonType.Link" Class="small" To="/account/forgotpassword">¿Se te olvidó la contraseña?</Button>
        </Div>

        <Div TextAlignment="TextAlignment.Center">
            <Button Type="ButtonType.Link" Class="small" To="/account/register">¿No cuentas con un usuario? ¡Regístrate!</Button>
        </Div>
    </Div>
</Column>

@if (ShowErrors)
{
    <div class="alert alert-danger" role="alert">
        @foreach (var error in Errors)
        {
            <p class="mb-0">@error</p>
        }
    </div>
}

@code {
    private LoginRequest ModelRequest { get; set; } = new LoginRequest();
    private bool ShowErrors;
    private IEnumerable<string> Errors = null!;

    private async Task Submit()
    {
        ShowErrors = false;

        ApiResponse result = await authService.Login(ModelRequest);

        if (result.Successful)
        {
            navigationManager.NavigateTo("/");
        }
        else
        {
            Errors = result.ErrorMessages;
            ShowErrors = true;
        }
    }
}

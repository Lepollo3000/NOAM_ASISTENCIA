@page "/asistencia/registro"
@inject CustomAuthenticationStateProvider AuthStateProvider
 
@if (Username != null)
{
    <SfGrid TValue="AsistenciaViewModel" AllowPaging="true">
        <SfDataManager Url="@($"api/asistencias")" Adaptor="Adaptors.WebApiAdaptor"></SfDataManager>
        <GridPageSettings PageSize="5"></GridPageSettings>
        <GridColumns>
            <GridColumn Field=@nameof(AsistenciaViewModel.NombreUsuario) HeaderText="Nombre" Width="100"></GridColumn>
            <GridColumn Field=@nameof(AsistenciaViewModel.ApellidoUsuario) HeaderText="Apellido" Width="100"></GridColumn>
            <GridColumn Field=@nameof(AsistenciaViewModel.FechaEntrada) HeaderText="Fecha Entrada" Format="yyyy/MM/dd" Type="ColumnType.Date" Width="100"></GridColumn>
            <GridColumn Field=@nameof(AsistenciaViewModel.FechaEntrada) HeaderText="Hora Entrada" Format="HH:mm" Type="ColumnType.Date" Width="100"></GridColumn>
            <GridColumn Field=@nameof(AsistenciaViewModel.FechaSalida) HeaderText="Fecha Salida" Format="yyyy/MM/dd" Type="ColumnType.Date" Width="100"></GridColumn>
            <GridColumn Field=@nameof(AsistenciaViewModel.FechaSalida) HeaderText="Hora Salida" Format="HH:mm" Type="ColumnType.Date" Width="100"></GridColumn>
            <GridColumn Field=@nameof(AsistenciaViewModel.NombreSucursal) HeaderText="Servicio" Width="100"></GridColumn>
        </GridColumns>
    </SfGrid>
}

@code {
    private string Username = null!;

    protected override async Task OnInitializedAsync()
    {
        // OBTENER LOS CLAIMS DE SESION PARA OBTENER EL NOMBRE DE USUARIO
        AuthenticationState authstate = await AuthStateProvider.GetAuthenticationStateAsync();
        ClaimsPrincipal user = authstate.User;
        // ASIGNAR EL NOMBRE A LA PROPIEDAD
        Username = user.Identity!.Name!;
    }
}

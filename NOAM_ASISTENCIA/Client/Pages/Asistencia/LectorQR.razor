@using BlazorBarcodeScanner.ZXing.JS
@inject IAsistenciaService AsistenciaService
@inject CustomAuthenticationStateProvider AuthStateProvider

<Heading TextAlignment="TextAlignment.Center" Size="HeadingSize.Is1">Registro de asistencia</Heading>

<Row Flex="Flex.JustifyContent.Center">
    <Alert Color="Color.Info" Padding="Padding.Is3" Visible="true">
        <AlertMessage>
            <Paragraph>A tomar en cuenta:</Paragraph>
        </AlertMessage>

        <AlertDescription>
            <UnorderedList>
                <UnorderedListItem>En esta pantalla se registrará la asistencia del usuario que tenga la sesión iniciada en este dispositivo.</UnorderedListItem>
                <UnorderedListItem>Debe leer el código QR que se encuentra en el establecimiento donde se vaya a dar el servicio de limpieza.</UnorderedListItem>
                <UnorderedListItem>Para conseguir hacer la lectura, se debe hacer clic en el botón "Iniciar Cámara" y conceder los permisos necesarios a la aplicación.</UnorderedListItem>
            </UnorderedList>
        </AlertDescription>
    </Alert>
</Row>

<Row Flex="Flex.JustifyContent.Center">
    <Button Clicked="InitCamera" Color="Color.Primary">Iniciar Cámara <Icon Name="IconName.Camera" /></Button>
</Row>

<Row Flex="Flex.JustifyContent.Center">
    <BarcodeReader @ref=_readerRef Title=""
                   StartCameraAutomatically="false"
                   OnBarcodeReceived="LocalReceivedBarcodeText"
                   ShowStart="false"
                   ShowReset="false"
                   ShowResult="false"
                   ShowToggleTorch="false"
                   ShowVideoDeviceList="true"
                   VideoWidth="400"
                   VideoHeight="400" />
</Row>

@code {
    private BarcodeReader? _readerRef;

    private string LocalBarcodeText = null!;

    private void InitCamera()
    {
        _readerRef!.StartDecoding();
    }

    private void LocalReceivedBarcodeText(BarcodeReceivedEventArgs args)
    {
        LocalBarcodeText = args.BarcodeText;
        StateHasChanged();
    }
}
